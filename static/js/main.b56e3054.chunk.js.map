{"version":3,"sources":["book.svg","components/PaginationNav.jsx","components/Paginate.jsx","components/Card.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PaginationNav","_ref","pagesAmount","setCurrentPage","currentPage","isFirstPage","isLastPage","paginationButtons","Array","fill","map","button","index","buttonNumber","react_default","a","createElement","key","className","aria-label","onClick","role","disabled","class","Paginate","children","pageSize","_useState","useState","_useState2","Object","slicedToArray","Math","ceil","length","constructor","console","error","paginatedChildren","slice","components_PaginationNav","Card","user","style","maxWidth","display","marginLeft","marginRight","src","avatar_url","alt","login","href","aria-hidden","App","users","setUsers","useEffect","axios","get","then","data","catch","err","log","getUsers","book","components_Paginate","element","components_Card","id","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b56e3054.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book.0b7b6c48.svg\";","import React from 'react';\nimport './pagination.css';\n\nconst PaginationNav = ({ pagesAmount, setCurrentPage, currentPage }) => {\n\tconst isFirstPage = currentPage === 1;\n\tconst isLastPage = currentPage === pagesAmount;\n\tconst paginationButtons = new Array(pagesAmount)\n\t\t.fill()\n\t\t.map((button, index) => {\n\t\t\tconst buttonNumber = index + 1;\n\t\t\treturn (\n\t\t\t\t<li key={buttonNumber}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'react-pagination-link ' +\n\t\t\t\t\t\t\t(currentPage === buttonNumber\n\t\t\t\t\t\t\t\t? 'react-is-current'\n\t\t\t\t\t\t\t\t: //buttonNumber !== 1 &&\n\t\t\t\t\t\t\t\t  //buttonNumber !== pagesAmount &&\n\t\t\t\t\t\t\t\t  //buttonNumber !== currentPage + 1 &&\n\t\t\t\t\t\t\t\t  //buttonNumber !== currentPage - 1 &&\n\t\t\t\t\t\t\t\t  'desktop')\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-label=\"Goto page\"\n\t\t\t\t\t\tonClick={() => setCurrentPage(buttonNumber)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{buttonNumber}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\treturn (\n\t\t<nav\n\t\t\tclassName=\"react-pagination\"\n\t\t\trole=\"navigation\"\n\t\t\taria-label=\"pagination\"\n\t\t>\n\t\t\t<button\n\t\t\t\tclassName=\"react-pagination-link \"\n\t\t\t\tdisabled={isFirstPage}\n\t\t\t\tonClick={() => setCurrentPage(1)}\n\t\t\t>\n\t\t\t\t<span class=\"react-icon\">\n\t\t\t\t\t<i class=\"fas fa-chevron-left\"></i>\n\t\t\t\t\t<i class=\"fas fa-chevron-left\"></i>\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName=\"react-pagination-link \"\n\t\t\t\tdisabled={isFirstPage}\n\t\t\t\tonClick={() => !isFirstPage && setCurrentPage(currentPage - 1)}\n\t\t\t>\n\t\t\t\t<span class=\"react-icon\">\n\t\t\t\t\t<i class=\"fas fa-chevron-left\"></i>\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t\t<li className=\"mobile\">\n\t\t\t\t<span class=\"pagination-ellipsis\">&hellip;</span>\n\t\t\t</li>\n\t\t\t<ul className=\"react-pagination-list\">{paginationButtons}</ul>\n\n\t\t\t<li className=\"mobile\">\n\t\t\t\t<span class=\"pagination-ellipsis\">&hellip;</span>\n\t\t\t</li>\n\t\t\t<button\n\t\t\t\tclassName=\"react-pagination-link \"\n\t\t\t\tdisabled={isLastPage}\n\t\t\t\tonClick={() => !isLastPage && setCurrentPage(currentPage + 1)}\n\t\t\t>\n\t\t\t\t<span class=\"react-icon\">\n\t\t\t\t\t<i class=\"fas fa-chevron-right\"></i>\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName=\"react-pagination-link \"\n\t\t\t\tdisabled={isLastPage}\n\t\t\t\tonClick={() => setCurrentPage(pagesAmount)}\n\t\t\t>\n\t\t\t\t<span class=\"react-icon\">\n\t\t\t\t\t<i class=\"fas fa-chevron-right\"></i>\n\t\t\t\t\t<i class=\"fas fa-chevron-right\"></i>\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t</nav>\n\t);\n};\n\nexport default PaginationNav;\n","import React, { useState } from 'react';\nimport PaginationNav from './PaginationNav';\n\nconst Paginate = ({ children, pageSize }) => {\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst pagesAmount = Math.ceil(children.length / pageSize);\n\tif (children.constructor !== Array) {\n\t\tconsole.error(\n\t\t\t'The children of the pagination component must be an Array'\n\t\t);\n\t\treturn <div />;\n\t}\n\tconst paginatedChildren = children.slice(\n\t\t(currentPage - 1) * pageSize,\n\t\tcurrentPage * pageSize\n\t);\n\treturn (\n\t\t<div>\n\t\t\t{paginatedChildren}\n\t\t\t<PaginationNav\n\t\t\t\tsetCurrentPage={setCurrentPage}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tpagesAmount={pagesAmount}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Paginate;\n","import React from 'react';\n\nconst Card = ({ user }) => (\n\t<div\n\t\tclassName=\"box\"\n\t\tstyle={{\n\t\t\tmaxWidth: '60vh',\n\t\t\tdisplay: 'block',\n\t\t\tmarginLeft: 'auto',\n\t\t\tmarginRight: 'auto',\n\t\t}}\n\t>\n\t\t<article className=\"media\">\n\t\t\t<div className=\"media-left\">\n\t\t\t\t<figure className=\"image is-64x64\">\n\t\t\t\t\t<img src={user.avatar_url} alt=\"\" />\n\t\t\t\t</figure>\n\t\t\t</div>\n\t\t\t<div className=\"media-content\">\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>{user.login}</strong> <small>@{user.login}</small>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<nav className=\"level is-mobile\">\n\t\t\t\t\t<div className=\"level-left\">\n\t\t\t\t\t\t<a href=\"#!\" className=\"level-item\" aria-label=\"reply\">\n\t\t\t\t\t\t\t<span className=\"icon is-small\">\n\t\t\t\t\t\t\t\t<i className=\"fas fa-reply\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href=\"#!\" className=\"level-item\" aria-label=\"retweet\">\n\t\t\t\t\t\t\t<span className=\"icon is-small\">\n\t\t\t\t\t\t\t\t<i className=\"fas fa-retweet\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href=\"#!\" className=\"level-item\" aria-label=\"like\">\n\t\t\t\t\t\t\t<span className=\"icon is-small\">\n\t\t\t\t\t\t\t\t<i className=\"fas fa-heart\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t</article>\n\t</div>\n);\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Paginate from './components/Paginate';\nimport Card from './components/Card';\nimport book from './book.svg';\n\nconst getUsers = (setUsers) =>\n\taxios\n\t\t.get('https://api.github.com/users')\n\t\t.then(({ data }) => setUsers(data))\n\t\t.catch((err) => console.log(err));\n\nconst PAGE_SIZE = 3;\n\nconst App = () => {\n\tconst [users, setUsers] = useState([]);\n\tuseEffect(() => {\n\t\tgetUsers(setUsers);\n\t}, []);\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"hero\">\n\t\t\t\t<div className=\"hero-body\">\n\t\t\t\t\t<h1 className=\"title is-1\">Frontend Pagination.</h1>\n\t\t\t\t\t<h2 className=\"subtitle is-4\">Made with React.</h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<img className=\"project-image\" src={book} alt=\"\" />\n\t\t\t<section className=\"section\">\n\t\t\t\t<h3 className=\"title\">Description</h3>\n\t\t\t\t<p className=\"subtitle\">\n\t\t\t\t\tIn this project I made a frontend pagination wraper with React.\n\t\t\t\t</p>\n\t\t\t</section>\n\t\t\t<Paginate pageSize={PAGE_SIZE}>\n\t\t\t\t{users.map((element) => (\n\t\t\t\t\t<Card user={element} key={element.id} />\n\t\t\t\t))}\n\t\t\t</Paginate>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}